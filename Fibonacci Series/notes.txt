fib(1)
    |
    '-> return 1

fib(2)
    |
    '-> fib(1) -> return 1
    '-> fib(0) -> return 0
                store 1 at memo[2]

fib(3)
    |
    '-> fib(2) -> lookup memo[2] -> return 1
    '-> fib(1) -> return 1
                store 2 at memo[3]

fib(4)
    |
    '-> fib(3) -> lookup memo[3] -> return 2
    '-> fib(2) -> lookup memo[2] -> return 1
                store 3 at memo[4]      

fib(5)
    |
    '-> fib(4) -> lookup memo[4] -> return 3
    '-> fib(3) -> lookup memo[3] -> return 2
                store 5 at memo[5]           


At each call to fib(i), we have already computed and stored values for fib(i-1) and fib(i-2).
We just loop up those values, sum them, store the new result and return.
    This takes a constant time (O(n) time)

This technique ---> MEMOIZATION
                        '-> very common one to optimize exponential time recursive algorithms